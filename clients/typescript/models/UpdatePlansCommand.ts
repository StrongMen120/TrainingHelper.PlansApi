/* tslint:disable */
/* eslint-disable */
/**
 * Training Plans Api - All Versions
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: all
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { OneUpdatedPlannedExerciseCommand } from './OneUpdatedPlannedExerciseCommand';
import {
    OneUpdatedPlannedExerciseCommandFromJSON,
    OneUpdatedPlannedExerciseCommandFromJSONTyped,
    OneUpdatedPlannedExerciseCommandToJSON,
} from './OneUpdatedPlannedExerciseCommand';
import type { PlansImage } from './PlansImage';
import {
    PlansImageFromJSON,
    PlansImageFromJSONTyped,
    PlansImageToJSON,
} from './PlansImage';

/**
 * 
 * @export
 * @interface UpdatePlansCommand
 */
export interface UpdatePlansCommand {
    /**
     * 
     * @type {string}
     * @memberof UpdatePlansCommand
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof UpdatePlansCommand
     */
    description: string;
    /**
     * 
     * @type {PlansImage}
     * @memberof UpdatePlansCommand
     */
    image: PlansImage;
    /**
     * 
     * @type {Array<OneUpdatedPlannedExerciseCommand>}
     * @memberof UpdatePlansCommand
     */
    plannedExercise: Array<OneUpdatedPlannedExerciseCommand>;
}

/**
 * Check if a given object implements the UpdatePlansCommand interface.
 */
export function instanceOfUpdatePlansCommand(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "description" in value;
    isInstance = isInstance && "image" in value;
    isInstance = isInstance && "plannedExercise" in value;

    return isInstance;
}

export function UpdatePlansCommandFromJSON(json: any): UpdatePlansCommand {
    return UpdatePlansCommandFromJSONTyped(json, false);
}

export function UpdatePlansCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdatePlansCommand {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'description': json['description'],
        'image': PlansImageFromJSON(json['image']),
        'plannedExercise': ((json['plannedExercise'] as Array<any>).map(OneUpdatedPlannedExerciseCommandFromJSON)),
    };
}

export function UpdatePlansCommandToJSON(value?: UpdatePlansCommand | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'description': value.description,
        'image': PlansImageToJSON(value.image),
        'plannedExercise': ((value.plannedExercise as Array<any>).map(OneUpdatedPlannedExerciseCommandToJSON)),
    };
}

