/* tslint:disable */
/* eslint-disable */
/**
 * Training Plans Api - All Versions
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: all
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface FileDetailsDto
 */
export interface FileDetailsDto {
    /**
     * 
     * @type {string}
     * @memberof FileDetailsDto
     */
    identifier: string;
    /**
     * 
     * @type {string}
     * @memberof FileDetailsDto
     */
    name: string;
    /**
     * 
     * @type {number}
     * @memberof FileDetailsDto
     */
    size: number;
    /**
     * 
     * @type {string}
     * @memberof FileDetailsDto
     */
    type: string;
    /**
     * 
     * @type {string}
     * @memberof FileDetailsDto
     */
    bytes: string;
}

/**
 * Check if a given object implements the FileDetailsDto interface.
 */
export function instanceOfFileDetailsDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "identifier" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "size" in value;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "bytes" in value;

    return isInstance;
}

export function FileDetailsDtoFromJSON(json: any): FileDetailsDto {
    return FileDetailsDtoFromJSONTyped(json, false);
}

export function FileDetailsDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): FileDetailsDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'identifier': json['identifier'],
        'name': json['name'],
        'size': json['size'],
        'type': json['type'],
        'bytes': json['bytes'],
    };
}

export function FileDetailsDtoToJSON(value?: FileDetailsDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'identifier': value.identifier,
        'name': value.name,
        'size': value.size,
        'type': value.type,
        'bytes': value.bytes,
    };
}

