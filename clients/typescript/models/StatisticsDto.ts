/* tslint:disable */
/* eslint-disable */
/**
 * Training Plans Api - All Versions
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: all
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface StatisticsDto
 */
export interface StatisticsDto {
    /**
     * 
     * @type {string}
     * @memberof StatisticsDto
     */
    identifier: string;
    /**
     * 
     * @type {number}
     * @memberof StatisticsDto
     */
    exerciseId: number;
    /**
     * 
     * @type {number}
     * @memberof StatisticsDto
     */
    userId: number;
    /**
     * 
     * @type {Date}
     * @memberof StatisticsDto
     */
    date: Date;
    /**
     * 
     * @type {number}
     * @memberof StatisticsDto
     */
    workoutVolume: number;
    /**
     * 
     * @type {number}
     * @memberof StatisticsDto
     */
    workoutIntensity: number;
}

/**
 * Check if a given object implements the StatisticsDto interface.
 */
export function instanceOfStatisticsDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "identifier" in value;
    isInstance = isInstance && "exerciseId" in value;
    isInstance = isInstance && "userId" in value;
    isInstance = isInstance && "date" in value;
    isInstance = isInstance && "workoutVolume" in value;
    isInstance = isInstance && "workoutIntensity" in value;

    return isInstance;
}

export function StatisticsDtoFromJSON(json: any): StatisticsDto {
    return StatisticsDtoFromJSONTyped(json, false);
}

export function StatisticsDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): StatisticsDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'identifier': json['identifier'],
        'exerciseId': json['exerciseId'],
        'userId': json['userId'],
        'date': (new Date(json['date'])),
        'workoutVolume': json['workoutVolume'],
        'workoutIntensity': json['workoutIntensity'],
    };
}

export function StatisticsDtoToJSON(value?: StatisticsDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'identifier': value.identifier,
        'exerciseId': value.exerciseId,
        'userId': value.userId,
        'date': (value.date.toISOString().substr(0,10)),
        'workoutVolume': value.workoutVolume,
        'workoutIntensity': value.workoutIntensity,
    };
}

