/* tslint:disable */
/* eslint-disable */
/**
 * Training Plans Api - All Versions
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: all
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { UserDetailsDto } from './UserDetailsDto';
import {
    UserDetailsDtoFromJSON,
    UserDetailsDtoFromJSONTyped,
    UserDetailsDtoToJSON,
} from './UserDetailsDto';

/**
 * 
 * @export
 * @interface ExercisesRecordsDto
 */
export interface ExercisesRecordsDto {
    /**
     * 
     * @type {number}
     * @memberof ExercisesRecordsDto
     */
    identifier: number;
    /**
     * 
     * @type {number}
     * @memberof ExercisesRecordsDto
     */
    revision: number;
    /**
     * 
     * @type {number}
     * @memberof ExercisesRecordsDto
     */
    exerciseId: number;
    /**
     * 
     * @type {number}
     * @memberof ExercisesRecordsDto
     */
    userId: number;
    /**
     * 
     * @type {Date}
     * @memberof ExercisesRecordsDto
     */
    date: Date;
    /**
     * 
     * @type {number}
     * @memberof ExercisesRecordsDto
     */
    reps: number;
    /**
     * 
     * @type {number}
     * @memberof ExercisesRecordsDto
     */
    weight: number;
    /**
     * 
     * @type {number}
     * @memberof ExercisesRecordsDto
     */
    lombardiResult: number;
    /**
     * 
     * @type {number}
     * @memberof ExercisesRecordsDto
     */
    brzyckiResult: number;
    /**
     * 
     * @type {number}
     * @memberof ExercisesRecordsDto
     */
    epleyResult: number;
    /**
     * 
     * @type {number}
     * @memberof ExercisesRecordsDto
     */
    mayhewResult: number;
    /**
     * 
     * @type {number}
     * @memberof ExercisesRecordsDto
     */
    adamsResult: number;
    /**
     * 
     * @type {number}
     * @memberof ExercisesRecordsDto
     */
    baechleResult: number;
    /**
     * 
     * @type {number}
     * @memberof ExercisesRecordsDto
     */
    bergerResult: number;
    /**
     * 
     * @type {number}
     * @memberof ExercisesRecordsDto
     */
    brownResult: number;
    /**
     * 
     * @type {number}
     * @memberof ExercisesRecordsDto
     */
    oneRepetitionMaximum: number;
    /**
     * 
     * @type {boolean}
     * @memberof ExercisesRecordsDto
     */
    isAutomat: boolean;
    /**
     * 
     * @type {string}
     * @memberof ExercisesRecordsDto
     */
    createdAt: string;
    /**
     * 
     * @type {UserDetailsDto}
     * @memberof ExercisesRecordsDto
     */
    createdBy: UserDetailsDto;
    /**
     * 
     * @type {string}
     * @memberof ExercisesRecordsDto
     */
    modifiedAt?: string | null;
    /**
     * 
     * @type {UserDetailsDto}
     * @memberof ExercisesRecordsDto
     */
    modifiedBy?: UserDetailsDto;
}

/**
 * Check if a given object implements the ExercisesRecordsDto interface.
 */
export function instanceOfExercisesRecordsDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "identifier" in value;
    isInstance = isInstance && "revision" in value;
    isInstance = isInstance && "exerciseId" in value;
    isInstance = isInstance && "userId" in value;
    isInstance = isInstance && "date" in value;
    isInstance = isInstance && "reps" in value;
    isInstance = isInstance && "weight" in value;
    isInstance = isInstance && "lombardiResult" in value;
    isInstance = isInstance && "brzyckiResult" in value;
    isInstance = isInstance && "epleyResult" in value;
    isInstance = isInstance && "mayhewResult" in value;
    isInstance = isInstance && "adamsResult" in value;
    isInstance = isInstance && "baechleResult" in value;
    isInstance = isInstance && "bergerResult" in value;
    isInstance = isInstance && "brownResult" in value;
    isInstance = isInstance && "oneRepetitionMaximum" in value;
    isInstance = isInstance && "isAutomat" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "createdBy" in value;

    return isInstance;
}

export function ExercisesRecordsDtoFromJSON(json: any): ExercisesRecordsDto {
    return ExercisesRecordsDtoFromJSONTyped(json, false);
}

export function ExercisesRecordsDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExercisesRecordsDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'identifier': json['identifier'],
        'revision': json['revision'],
        'exerciseId': json['exerciseId'],
        'userId': json['userId'],
        'date': (new Date(json['date'])),
        'reps': json['reps'],
        'weight': json['weight'],
        'lombardiResult': json['lombardiResult'],
        'brzyckiResult': json['brzyckiResult'],
        'epleyResult': json['epleyResult'],
        'mayhewResult': json['mayhewResult'],
        'adamsResult': json['adamsResult'],
        'baechleResult': json['baechleResult'],
        'bergerResult': json['bergerResult'],
        'brownResult': json['brownResult'],
        'oneRepetitionMaximum': json['oneRepetitionMaximum'],
        'isAutomat': json['isAutomat'],
        'createdAt': json['createdAt'],
        'createdBy': UserDetailsDtoFromJSON(json['createdBy']),
        'modifiedAt': !exists(json, 'modifiedAt') ? undefined : json['modifiedAt'],
        'modifiedBy': !exists(json, 'modifiedBy') ? undefined : UserDetailsDtoFromJSON(json['modifiedBy']),
    };
}

export function ExercisesRecordsDtoToJSON(value?: ExercisesRecordsDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'identifier': value.identifier,
        'revision': value.revision,
        'exerciseId': value.exerciseId,
        'userId': value.userId,
        'date': (value.date.toISOString().substr(0,10)),
        'reps': value.reps,
        'weight': value.weight,
        'lombardiResult': value.lombardiResult,
        'brzyckiResult': value.brzyckiResult,
        'epleyResult': value.epleyResult,
        'mayhewResult': value.mayhewResult,
        'adamsResult': value.adamsResult,
        'baechleResult': value.baechleResult,
        'bergerResult': value.bergerResult,
        'brownResult': value.brownResult,
        'oneRepetitionMaximum': value.oneRepetitionMaximum,
        'isAutomat': value.isAutomat,
        'createdAt': value.createdAt,
        'createdBy': UserDetailsDtoToJSON(value.createdBy),
        'modifiedAt': value.modifiedAt,
        'modifiedBy': UserDetailsDtoToJSON(value.modifiedBy),
    };
}

